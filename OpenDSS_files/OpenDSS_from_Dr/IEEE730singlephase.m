clear all;
clc;

[DSSStartOK, DSSObj, DSSText] = DSSStartup;

if DSSStartOK
    

DSSObj.AllowForms = false;    


DSSText.Command = 'Set DataPath = C:\Users\USER\Desktop\Journal paper\730node\OpenDSS730node\OpenDSS730node';

DSSText.Command = 'compile singlephase730.dss';          
    
DSSCircuit      = DSSObj.ActiveCircuit;

 
% iLoads = DSSCircuit.Loads.First;
% while iLoads,
%  % Scale load by 120%
%  DSSCircuit.Loads.kW = DSSCircuit.Loads.kW * 1;
%  % Move to next load
%  iLoads = DSSCircuit.Loads.Next;
% end


DSSSolution = DSSCircuit.Solution;
DSSSolution.Solve;                          %% solving the circuit 
fprintf("Total Iterations = %d \n", DSSSolution.Totaliterations)
fprintf("Total Solve Time = %4.5f sec\n", DSSSolution.Total_Time*1e-6)

Buses=DSSCircuit.Allbusnames;               %% knowing all the buses in the system
DSSCircuit.SetActiveElement('Vsource.SOURCE');                  %% power generated by source
Power_subsopend = -1*(DSSCircuit.ActivecktElement.Powers);
Vallnodes = DSSCircuit.AllBusVmagPU';
DSSMons=DSSCircuit.Monitors; 
MonNames=DSSMons.AllName;
Moncount = DSSMons.First;
ChannelData=[]; % Initialization



Buses1=str2double(Buses);

%% Voltage as per ascending node number

% bus_voltage = [busname Vallnodes'];         %% busname and corresponding volatge
% Vasced = sort(busname);                     %% sorting the bus name in ascending order
% VoltOpenDSS = [];
% for i = 1:size(Vasced,1)
% indx = find(i ==bus_voltage(:,1));
% Vo = bus_voltage(indx,2);
% VoltOpenDSS = [VoltOpenDSS Vo];
% end


          a = 'DSS start properly';
else
    
    a = 'DSS did not start properly';
    disp(a)
end

