
clear, clc

% total_iter = [];
% solve_time = [];


for k=1:100


[DSSStartOK, DSSObj, DSSText] = DSSStartup;

if DSSStartOK
    

   

DSSObj.AllowForms = false;    


DSSText.Command = 'Set DataPath = C:\Users\USER\Desktop\Journal paper\730node\OpenDSS730node\OpenDSS730node';

DSSText.Command = 'compile singlephase730.dss';          
    
% load busnamematlab.txt;
% busname = busnamematlab;



DSSCircuit      = DSSObj.ActiveCircuit;

 
% iLoads = DSSCircuit.Loads.First;
% while iLoads,
%  % Scale load by 120%
%  DSSCircuit.Loads.kW = DSSCircuit.Loads.kW * 1;
%  % Move to next load
%  iLoads = DSSCircuit.Loads.Next;
% end




DSSSolution     = DSSCircuit.Solution;
DSSSolution.Solve;                          %% solving the circuit without PV
fprintf("Total Iterations = %d \n", DSSSolution.Totaliterations)
fprintf("Total Solve Time = %4.5f sec\n", DSSSolution.Total_Time*1e-6)

Buses=DSSCircuit.Allbusnames;               %% knowing all the buses in the system
DSSCircuit.SetActiveElement('Vsource.SOURCE');                  %% power generated by source
Power_subsopend = -1*(DSSCircuit.ActivecktElement.Powers);
Vallnodes = DSSCircuit.AllBusVmagPU;
DSSMons=DSSCircuit.Monitors; 
MonNames=DSSMons.AllName;
Moncount = DSSMons.First;
ChannelData=[]; % Initialization

total_iter(k,1) = DSSSolution.Totaliterations;
solve_time(k,1) = DSSSolution.Total_Time*1e-6;

    
end

end

avg_solve_time = mean(solve_time); % in sec
